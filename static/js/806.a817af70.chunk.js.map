{"version":3,"file":"static/js/806.a817af70.chunk.js","mappings":"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","sources":["components/PhoneForm/PhoneForm.styled.js","components/PhoneForm/PhoneForm.jsx","components/Contacts/ContactSection.styled.js","components/Contacts/ContactItem.jsx","components/Contacts/ContactSection.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Spiner/Spiner.module.css?e29c","components/Spiner/Spiner.jsx","views/PhoneBookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PhoneForm = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nborder: 1px solid blue;\npadding: ${p => `${p.theme.space[4]}px`};\nmargin: 0 auto 0 auto;\nwidth: 30%;\nbackground-color: ${p => `${p.theme.colors.wheat}`} ;\n`;\n\nexport const NameLable = styled.label`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-between;\nfont-size: ${p => `${p.theme.fontSizes.m}`};\npadding: ${p => `${p.theme.space[2]}px`};\n// border: 1px solid black;\nwidth: 80%;\n`;\n\nexport const PhoneInput = styled.input`\nwidth: 70%;\nmargin-left: ${p => `${p.theme.space[4]}px`};\n`;\n\nexport const AddButton = styled.button`\npadding: ${p => `${p.theme.space[2]}px`};\nmargin-top: ${p => `${p.theme.space[4]}px`};\nwidth: 30%;\nmin-width: 70px;\nbackground-color: ${p => `${p.theme.colors.secondary}`};\nborder-radius: 5px;\n:hover {\n\tbackground-color: ${p => `${p.theme.colors.accent}`} ;\n}`;","import {PhoneForm, NameLable, PhoneInput, AddButton } from './PhoneForm.styled';\nimport { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from \"nanoid\";\nimport { toast } from 'react-toastify';\n\nexport function PhoneSection({ onSubmit }) {\n\tconst [name, setName] = useState('');\n\tconst [number, setNumber] = useState('');\n\n\tconst inputId = nanoid();\n\t// const dispatch = useDispatch();\n\n\tconst onInputChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tif (name === \"name\") {\n\t\t\tsetName(value);\n\t\t\treturn;\n\t\t}\n\t\telse if (name === \"number\") {\n\t\t\tsetNumber(value);\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\ttoast.error(`Error with ${name}, please try again`);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tonSubmit({name: name, number: number});\n\t\treset();\n\t}\n\n\tconst reset = () => {\n\t\tsetName('');\n\t\tsetNumber('');\n\t}\n\n\t\treturn(\n\t\t(\n\t\t\t<PhoneForm onSubmit={handleSubmit} autoComplete=\"off\">\n\t\t\t\t\t<NameLable htmlFor={name} >\n\t\t\t\t\t\tName\n\t\t\t\t\t\t<PhoneInput\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"name\"\n  \t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  \t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid={inputId}\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={onInputChange}>\n\t\t\t\t\t\t</PhoneInput>\n\t\t\t\t\t</NameLable>\n\t\t\t\t\t<NameLable htmlFor={number} >\n\t\t\t\t\t\tPhone\n\t\t\t\t\t\t<PhoneInput\n\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\tname=\"number\"\n  \t\t\t\t\t\t\t pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  \t\t\t\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid={inputId}\n\t\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\t\tonChange={onInputChange}>\n\t\t\t\t\t\t</PhoneInput>\n\t\t\t\t\t</NameLable>\n\t\t\t\t<AddButton type='submit'>Add Contact</AddButton>\n\t\t\t</PhoneForm>\n\t\t\t)\n\t\t)\n}","import styled from 'styled-components';\n\nexport const ContactHead = styled.h2`\npadding-left: ${p => `${p.theme.space[4]}px`};`;\n\nexport const Contacts = styled.ul`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n//border: 1px solid blue;\npadding: ${p => `${p.theme.space[4]}px`};\nmargin: 0 auto 0 auto;\nwidth: 30%;\n//background-color: ${p => `${p.theme.colors.wheat}`} ;\n`;\n\nexport const Header = styled.li`\ndisplay: flex;\njustify-content: space-between;\nflex-direction: row;\nmin-width: 200px;\nwidth: 100%;\nborder: solid 1px red;\npadding: ${p => `${p.theme.space[4]}px`};\nbackground-color: ${p => `${p.theme.colors.accent}`};\n`;\n\nexport const Contact = styled.li`\ndisplay: inline-flex;\njustify-content: space-between;\nborder: solid 1px red;\nmin-width: 200px;\nwidth: 100%;\npadding: ${p => `${p.theme.space[4]}px`};\n`;\n\nexport const DeleteButton = styled.button`\n\tpadding: ${p => `${p.theme.space[2]}px`};\n\tborder: ${p => p.theme.borders.normal};\n\tfont-size: ${p => p.theme.fontSizes.m};\n\tborder-radius: 5px;\n\tbackground-color: ${p => `${p.theme.colors.secondary}`};\n\t:hover {\n\t\tbackground-color: ${p => `${p.theme.colors.accent}`} ;\n\t}\n`;","import { Contact, DeleteButton } from \"./ContactSection.styled\";\nimport { removeContact } from '../../redux/contacts/contactOperation';\nimport { useDispatch } from 'react-redux';\n//import { useDeleteContactMutation } from '../../redux/contactApi';\n\nexport const ContactItem = ({ id, name, number }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Contact>\n\t\t\t<p>{name}</p>\n\t\t\t<p>{number}</p>\n\t\t\t<DeleteButton type=\"button\" id={id} onClick={() => dispatch(removeContact(id))}>Delete</DeleteButton>\n\t\t</Contact>\n\t);\n}","import { Contacts, Header} from \"./ContactSection.styled\";\nimport { ContactItem } from './ContactItem';\nimport propTypes from 'prop-types';\n \n\nexport const ContactForm = ({ contacts, onDeleteContact } ) => {\n\t\treturn (\n\t\t\t<Contacts>\n\t\t\t\t<Header>\n\t\t\t\t\t<p>Name</p>\n\t\t\t\t\t<p>Phone</p>\n\t\t\t\t\t<p>Delete</p>\n\t\t\t\t</Header>\n\t\t\t\t{contacts.map((contact) => {\n\t\t\t\t\t\t\tconst { id, name, number } = contact;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ContactItem\n\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tnumber={number}\n\t\t\t\t\t\t\t\t\tonDeleteContact = {onDeleteContact}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</Contacts>\n\t\t)\n}\n\nContacts.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n    }).isRequired\n  ),\n  onDeleteContact: propTypes.func,\n};","import styled from \"styled-components\";\n\nexport const FilterForm = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\npadding: ${p => `${p.theme.space[4]}px`};\nmargin: 0 auto 0 auto;\nwidth: 30%;\nborder: 1px solid blue;\nbackground-color: ${p => `${p.theme.colors.wheat}`} ;\n`;\n\nexport const FilterLable = styled.label`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\npadding-left: ${p => `${p.theme.space[4]}px`};\nwidth: 80%;\n`;\n\nexport const FilterInput = styled.input`\n\twidth: 70%;\n`;","import { FilterForm, FilterLable, FilterInput } from './Filter.styled';\nimport propTypes from 'prop-types';\n\nexport const FilterSection = ({ title, value, onChange }) => {\n\treturn (\n\t\t<FilterForm autoComplete=\"off\">\n\t\t\t<FilterLable htmlFor='filter'>\n\t\t\t\t{title}\n\t\t\t\t<FilterInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname='filter'\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t</FilterLable>\n\t\t</FilterForm>\n\t);\n};\n\nFilterSection.prototype = {\n      title: propTypes.string,\n      value: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"spiner\":\"Spiner_spiner__Y3Bg-\",\"rotate\":\"Spiner_rotate__hsw7e\"};","import { TiArrowSync } from 'react-icons/ti';\nimport css from './Spiner.module.css';\n\nexport const Spiner = () => {\n\treturn (\n\t\t<>\n\t\t\t<TiArrowSync className={css.spiner} />\n\t\t</>\n\t);\n}\n","import { PhoneSection } from '../components/PhoneForm/PhoneForm';\nimport { ContactForm } from  '../components/Contacts/ContactSection';\nimport { FilterSection } from '../components/Filter/Filter';\nimport { nanoid } from \"nanoid\";\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Spiner } from '../components/Spiner/Spiner';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { createContact, getContacts } from '../redux/contacts/contactOperation';\nimport { changeFilter } from '../redux/contacts/contactSlice';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function PhoneBookPage() {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n  const isLoading = useSelector(state => state.contacts.createContactLoading);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n  \n  const onFormSubmit = ({name, number }) => {\n      const isNameOnList = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (isNameOnList) {\n        toast.warn(`${name} is already in contacts.`, {autoClose: 1000})\n        return;\n    }\n    else if (!isNameOnList) {\n      dispatch(createContact({ id: nanoid(), name, number }));\n      toast.success(`Contact ${name} added to the Phone List`);\n      }\n     };\n\n  const onChangeFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  }\n\n  const getFilteredContact = () => {\n    const newContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase()));\n    return newContacts;\n  }\n\n    return (\n      <>\n        <h1 className='primaryTitle'>Phonebook</h1>\n        <PhoneSection onSubmit={onFormSubmit} />\n        <FilterSection title={\"Find contacts by name\"} value={filter} onChange={onChangeFilter}/>\n        <h2 className='secondaryTitle'>Contacts</h2>\n        {isLoading\n          ? <Spiner />\n          : (contacts === undefined)||((contacts.length === 0))\n            ? (<h3 className='warningText'>No Contects in your PhoneBook</h3>)\n            : (<ContactForm contacts={getFilteredContact()} />)}\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={1500}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </>\n    );\n}"],"names":["PhoneForm","styled","p","theme","space","colors","wheat","NameLable","fontSizes","m","PhoneInput","AddButton","secondary","accent","PhoneSection","onSubmit","useState","name","setName","number","setNumber","inputId","nanoid","onInputChange","event","target","value","toast","reset","preventDefault","autoComplete","htmlFor","type","pattern","title","required","id","onChange","Contacts","Header","Contact","DeleteButton","borders","normal","ContactItem","dispatch","useDispatch","onClick","removeContact","ContactForm","contacts","onDeleteContact","map","contact","propTypes","isRequired","FilterForm","FilterLable","FilterInput","FilterSection","prototype","Spiner","className","css","PhoneBookPage","useSelector","state","filter","isLoading","createContactLoading","useEffect","getContacts","isNameOnList","find","toLowerCase","autoClose","createContact","changeFilter","undefined","length","includes","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}