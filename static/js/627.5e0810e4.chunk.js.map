{"version":3,"file":"static/js/627.5e0810e4.chunk.js","mappings":"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","sources":["components/PhoneForm/PhoneForm.styled.js","components/PhoneForm/PhoneForm.jsx","../node_modules/nanoid/index.browser.js","components/Contacts/ContactSection.styled.js","components/Contacts/ContactItem.jsx","components/Contacts/ContactSection.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","views/PhoneBookPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PhoneForm = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nborder: 1px solid blue;\npadding: ${p => `${p.theme.space[4]}px`};\nmargin: 0 auto 0 auto;\nwidth: 30%;\nbackground-color: ${p => `${p.theme.colors.wheat}`} ;\n`;\n\nexport const NameLable = styled.label`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-between;\nfont-size: ${p => `${p.theme.fontSizes.m}`};\npadding: ${p => `${p.theme.space[2]}px`};\n// border: 1px solid black;\nwidth: 80%;\n`;\n\nexport const PhoneInput = styled.input`\nwidth: 70%;\nmargin-left: ${p => `${p.theme.space[4]}px`};\n`;\n\nexport const AddButton = styled.button`\npadding: ${p => `${p.theme.space[2]}px`};\nmargin-top: ${p => `${p.theme.space[4]}px`};\nwidth: 30%;\nmin-width: 70px;\nbackground-color: ${p => `${p.theme.colors.secondary}`};\nborder-radius: 5px;\n:hover {\n\tbackground-color: ${p => `${p.theme.colors.accent}`} ;\n}`;","import {PhoneForm, NameLable, PhoneInput, AddButton } from './PhoneForm.styled';\nimport { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from \"nanoid\";\nimport { toast } from 'react-toastify';\n\nexport function PhoneSection({ onSubmit }) {\n\tconst [name, setName] = useState('');\n\tconst [number, setNumber] = useState('');\n\n\tconst inputId = nanoid();\n\t// const dispatch = useDispatch();\n\n\tconst onInputChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tif (name === \"name\") {\n\t\t\tsetName(value);\n\t\t\treturn;\n\t\t}\n\t\telse if (name === \"number\") {\n\t\t\tsetNumber(value);\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\ttoast.error(`Error with ${name}, please try again`);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tonSubmit({name: name, number: number});\n\t\treset();\n\t}\n\n\tconst reset = () => {\n\t\tsetName('');\n\t\tsetNumber('');\n\t}\n\n\t\treturn(\n\t\t(\n\t\t\t<PhoneForm onSubmit={handleSubmit} autoComplete=\"off\">\n\t\t\t\t\t<NameLable htmlFor={name} >\n\t\t\t\t\t\tName\n\t\t\t\t\t\t<PhoneInput\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"name\"\n  \t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  \t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid={inputId}\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={onInputChange}>\n\t\t\t\t\t\t</PhoneInput>\n\t\t\t\t\t</NameLable>\n\t\t\t\t\t<NameLable htmlFor={number} >\n\t\t\t\t\t\tPhone\n\t\t\t\t\t\t<PhoneInput\n\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\tname=\"number\"\n  \t\t\t\t\t\t\t pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  \t\t\t\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid={inputId}\n\t\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\t\tonChange={onInputChange}>\n\t\t\t\t\t\t</PhoneInput>\n\t\t\t\t\t</NameLable>\n\t\t\t\t<AddButton type='submit'>Add Contact</AddButton>\n\t\t\t</PhoneForm>\n\t\t\t)\n\t\t)\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from 'styled-components';\n\nexport const ContactHead = styled.h2`\npadding-left: ${p => `${p.theme.space[4]}px`};`;\n\nexport const Contacts = styled.ul`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n//border: 1px solid blue;\npadding: ${p => `${p.theme.space[4]}px`};\nmargin: 0 auto 0 auto;\nwidth: 30%;\n//background-color: ${p => `${p.theme.colors.wheat}`} ;\n`;\n\nexport const Header = styled.li`\ndisplay: flex;\njustify-content: space-between;\nflex-direction: row;\nmin-width: 200px;\nwidth: 100%;\nborder: solid 1px red;\npadding: ${p => `${p.theme.space[4]}px`};\nbackground-color: ${p => `${p.theme.colors.accent}`};\n`;\n\nexport const Contact = styled.li`\ndisplay: inline-flex;\njustify-content: space-between;\nborder: solid 1px red;\nmin-width: 200px;\nwidth: 100%;\npadding: ${p => `${p.theme.space[4]}px`};\n`;\n\nexport const DeleteButton = styled.button`\n\tpadding: ${p => `${p.theme.space[2]}px`};\n\tborder: ${p => p.theme.borders.normal};\n\tfont-size: ${p => p.theme.fontSizes.m};\n\tborder-radius: 5px;\n\tbackground-color: ${p => `${p.theme.colors.secondary}`};\n\t:hover {\n\t\tbackground-color: ${p => `${p.theme.colors.accent}`} ;\n\t}\n`;","import { Contact, DeleteButton } from \"./ContactSection.styled\";\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n} from '../../redux/contacts/contactOperation';\n//import { useDeleteContactMutation } from '../../redux/contactApi';\n\nexport const ContactItem = ({ id, name, number }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Contact>\n\t\t\t<p>{name}</p>\n\t\t\t<p>{number}</p>\n\t\t\t<DeleteButton type=\"button\" id={id} onClick={() => dispatch(deleteContact(id))}>Delete</DeleteButton>\n\t\t</Contact>\n\t);\n}","import { Contacts, Header} from \"./ContactSection.styled\";\nimport { ContactItem } from './ContactItem';\nimport propTypes from 'prop-types';\n \n\nexport const ContactForm = ({ contacts, onDeleteContact } ) => {\n\t\treturn (\n\t\t\t<Contacts>\n\t\t\t\t<Header>\n\t\t\t\t\t<p>Name</p>\n\t\t\t\t\t<p>Phone</p>\n\t\t\t\t\t<p>Delete</p>\n\t\t\t\t</Header>\n\t\t\t\t{contacts.map((contact) => {\n\t\t\t\t\t\t\tconst { id, name, number } = contact;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ContactItem\n\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tnumber={number}\n\t\t\t\t\t\t\t\t\tonDeleteContact = {onDeleteContact}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</Contacts>\n\t\t)\n}\n\nContacts.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n    }).isRequired\n  ),\n  onDeleteContact: propTypes.func,\n};","import styled from \"styled-components\";\n\nexport const FilterForm = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\npadding: ${p => `${p.theme.space[4]}px`};\nmargin: 0 auto 0 auto;\nwidth: 30%;\nborder: 1px solid blue;\nbackground-color: ${p => `${p.theme.colors.wheat}`} ;\n`;\n\nexport const FilterLable = styled.label`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\npadding-left: ${p => `${p.theme.space[4]}px`};\nwidth: 80%;\n`;\n\nexport const FilterInput = styled.input`\n\twidth: 70%;\n`;","import { FilterForm, FilterLable, FilterInput } from './Filter.styled';\nimport propTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactSlice';\n\nexport const FilterSection = ({ title }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<FilterForm autoComplete=\"off\">\n\t\t\t<FilterLable htmlFor='filter'>\n\t\t\t\t{title}\n\t\t\t\t<FilterInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname='filter'\n\t\t\t\t\t// value={value}\n\t\t\t\t\tonChange={e => dispatch(changeFilter(e.currentTarget.value))}\n\t\t\t\t\t/>\n\t\t\t</FilterLable>\n\t\t</FilterForm>\n\t);\n};\n\nFilterSection.prototype = {\n      title: propTypes.string,\n      value: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n};","import { PhoneSection } from '../components/PhoneForm/PhoneForm';\nimport { ContactForm } from  '../components/Contacts/ContactSection';\nimport { FilterSection } from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Spiner } from '../components/Spiner/Spiner';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { changeFilter } from '../redux/contacts/contactSlice';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  addContact,\n  getContact,\n} from '../redux/contacts/contactOperation';\n\nexport default function PhoneBookPage() {\n\n  const contactsState = useSelector(state => state.contacts.items);\n  const filterState = useSelector(state => state.contacts.filter);\n\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContact());\n  }, [dispatch]);\n  \n  const onFormSubmit = ({name, number }) => {\n      const isNameOnList = contactsState.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (isNameOnList) {\n        toast.warn(`${name} is already in contacts.`, {autoClose: 1000})\n        return;\n    }\n    else if (!isNameOnList) {\n      dispatch(addContact({ name: name, number: number }));\n      toast.success(`Contact ${name} added to the Phone List`);\n      }\n     };\n\n  const onChangeFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  }\n\n  const getFilteredContact = () => {\n    const filterToLowerCase = filterState.toLowerCase();\n    return contactsState.filter(contact =>\n      contact.name.toLowerCase().includes(filterToLowerCase)\n    );\n  }\n\n    return (\n      <>\n        <h1 className='primaryTitle'>Phonebook</h1>\n        <PhoneSection onSubmit={onFormSubmit} />\n        <FilterSection title={\"Find contacts by name\"} onChange={onChangeFilter}/>\n        <h2 className='secondaryTitle'>Contacts</h2>\n        {isLoading\n          ? <Spiner />\n          : (contactsState === undefined)||((contactsState.length === 0))\n            ? (<h3 className='warningText'>No Contects in your PhoneBook</h3>)\n            : (<ContactForm contacts={getFilteredContact()} />)}\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={1500}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </>\n    );\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["PhoneForm","styled","p","theme","space","colors","wheat","NameLable","fontSizes","m","PhoneInput","AddButton","secondary","accent","PhoneSection","onSubmit","useState","name","setName","number","setNumber","inputId","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","onInputChange","event","target","value","toast","reset","preventDefault","autoComplete","htmlFor","type","pattern","title","required","onChange","Contacts","Header","Contact","DeleteButton","borders","normal","ContactItem","dispatch","useDispatch","onClick","deleteContact","ContactForm","contacts","onDeleteContact","map","contact","propTypes","isRequired","FilterForm","FilterLable","FilterInput","FilterSection","e","changeFilter","currentTarget","prototype","PhoneBookPage","contactsState","useSelector","state","items","filterState","filter","isLoading","useEffect","getContact","className","isNameOnList","find","toLowerCase","autoClose","addContact","Spiner","undefined","length","filterToLowerCase","includes","getFilteredContact","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}